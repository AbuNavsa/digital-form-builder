name: Main QA
env:
  SEMVER: 0.0.3
on:
  push:
    branches:
      - master
      - main
      - fs-1263-publish-fork
jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [designer, runner, model]
    env:
      SEMVER: $SEMVER
    name: lint-and-test-${{matrix.app}}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Configure yarn caching
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Build dependencies
        run: yarn build:dependencies

      - name: Lint
        run: yarn ${{matrix.app}} lint

      - name: Test
        run: yarn ${{matrix.app}} test-cov

      - name: Upload test results artifacts
        uses: actions/upload-artifact@v2
        if: ${{ success() || failure() }}
        with:
          name: test-results-${{matrix.app}}
          path: ${{matrix.app}}/test-results
          retention-days: 14

      - name: Upload test coverage artifacts
        uses: actions/upload-artifact@v2
        if: ${{ success() || failure() }}
        with:
          name: test-coverage-${{matrix.app}}
          path: ${{matrix.app}}/test-coverage
          retention-days: 14

  build-and-publish-images:
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    env:
      SEMVER: ${{ needs.assign-semver.outputs.SEMVER }}
    strategy:
      matrix:
        app: [designer, runner]
    name: build-and-publish-${{matrix.app}}-image
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Docker compose pull
        run: docker-compose pull
      - name: Docker layer caching DAYOFYEAR key
        # DAYOFYEAR key is used to rotate docker-layer-caching daily to avoid the layers dangle issues
        # see https://github.com/satackey/action-docker-layer-caching/issues/55
        # if you change this, please remember to apply the same changes to branch--lint-unit-and-smoke-test.yml
        # so main branch cache can be shared with branches
        run: echo "DAYOFYEAR=$(date +%j)" >> $GITHUB_ENV
      - name: Create .env for ${{ matrix.app }} workspace
        run: |
          touch ./${{ matrix.app }}/.env
          echo LAST_TAG_GH=${{ env.SEMVER }} >> ./${{ matrix.app }}/.env
          echo LAST_COMMIT_GH=${{ github.sha }} >> ./${{ matrix.app }}/.env
          cat ./${{ matrix.app }}/.env
      - name: Docker compose build ${{ matrix.app }}
        run: |
          LAST_TAG='${{ env.SEMVER }}'
          LAST_COMMIT='${{ github.sha }}'
          docker-compose build ${{ matrix.app }}
      - name: Check images
        run: |
          docker image ls
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GHCR_PAT }}

      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Tag image (Main)
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag digital-form-builder-dluhc-${{matrix.app}} ghcr.io/${{github.repository_owner}}/digital-form-builder-dluhc-${{matrix.app}}:latest
          docker tag digital-form-builder-dluhc-${{matrix.app}} ghcr.io/${{github.repository_owner}}/digital-form-builder-dluhc-${{matrix.app}}:${{ env.SEMVER }}
          docker tag digital-form-builder-dluhc-${{matrix.app}} ghcr.io/${{github.repository_owner}}/digital-form-builder-dluhc-${{matrix.app}}:${{ github.sha }}
      - name: Push Docker images (Main)
        if: github.ref == 'refs/heads/main'
        run: |
          docker push ghcr.io/${{github.repository_owner}}/digital-form-builder-dluhc-${{matrix.app}}:latest
          docker push ghcr.io/${{github.repository_owner}}/digital-form-builder-dluhc-${{matrix.app}}:${{ env.SEMVER }}
          docker tag digital-form-builder-dluhc-${{matrix.app}} ghcr.io/${{github.repository_owner}}/digital-form-builder-dluhc-${{matrix.app}}:${{ github.sha }}
      # - name: Trigger deploy development environment
      #   uses: benc-uk/workflow-dispatch@v1
      #   with:
      #     workflow: Deploy Development Environment
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     inputs: '{ "app": "${{ matrix.app }}", "tag": "${{ env.SEMVER }}"}'

  tag-branch:
    runs-on: ubuntu-latest
    needs: [build-and-publish-images]
    env:
      SEMVER: ${{ needs.assign-semver.outputs.SEMVER }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag branch with run number
        run: |
          git tag ${{ env.SEMVER }}
          git push --tags origin HEAD
