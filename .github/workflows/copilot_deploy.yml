name: Deploy to AWS

permissions:
  packages: write
  contents: write

on:
  push:
    paths-ignore:
      [
        "**/README.md",
        ".github/workflows/increment-version.yml",
        "version",
        "python/**",
      ]
  workflow_dispatch:
    inputs:
      environment:
        description: Deploy to which environnment
        type: choice
        required: true
        options:
          - dev
          - test
          - uat
          - prod

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: "funding-service-design-form-runner"
  IMAGE_REPO_PATH: "ghcr.io/${{github.repository_owner}}"

jobs:
  copilot_environments_workflow_setup:
    runs-on: ubuntu-latest
    outputs:
      test_deploy: ${{ steps.copilot_env_list.outputs.test_deploy }}
      prod_deploy: ${{ steps.copilot_env_list.outputs.prod_deploy }}
    steps:
      - id: copilot_env_list
        run: |
          if [ "${{ github.ref }}" == 'refs/heads/main' ]; then
            echo "test_deploy=yes">> $GITHUB_OUTPUT
            echo "prod_deploy=yes">> $GITHUB_OUTPUT
          elif [ "${{ inputs.environment }}" == "" ]; then
            echo "test_deploy=yes">> $GITHUB_OUTPUT
          fi

  docker-build:
    runs-on: ubuntu-latest
    needs: [copilot_environments_workflow_setup]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: "Set version in env"
        id: set-version
        run: |
          source version
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{env.IMAGE_REPO_PATH}}/${{env.IMAGE_NAME}}
          tags: |
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{env.VERSION}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=ref,event=branch

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create .env for runner workspace
        run: |
          touch ./runner/.env
          echo LAST_TAG_GH=runner >> ./runner/.env
          echo LAST_COMMIT_GH=runner >> ./runner/.env
          cat ./runner/.env

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ steps.metadata.outputs.tags}}
          labels: ${{ steps.metadata.outputs.labels }}
          push: true
          file: ./fsd_config/Dockerfile
          build-args: |
            LAST_TAG='${{env.VERSION}}'
            LAST_COMMIT='${{ github.sha }}'

  ind_deploy:
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    needs: docker-build
    if: ${{ inputs.environment != '' }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/standard-deploy.yml@main
    secrets:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
    with:
      environment: ${{ inputs.environment }}
      app_name: 'notification'
      version: ${{ github.ref_name == 'main' && 'latest' || needs.tag_version.outputs.version_to_tag }}

  dev_deploy:
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    needs: docker-build
    if: ${{ needs.copilot_environments_workflow_setup.outputs.test_deploy == 'yes' }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/standard-deploy.yml@main
    secrets:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
    with:
      environment: dev
      app_name: 'form-runner'
      version: ${{ github.ref_name == 'main' && 'latest' || needs.tag_version.outputs.version_to_tag }}

  test_deploy:
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    needs: dev_deploy
    if: ${{ needs.copilot_environments_workflow_setup.outputs.test_deploy == 'yes' }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/standard-deploy.yml@main
    secrets:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
    with:
      environment: 'test'
      app_name: 'form-runner'
      version: ${{ github.ref_name == 'main' && 'latest' || needs.tag_version.outputs.version_to_tag }}

  uat_deploy:
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    needs: test_deploy
    if: ${{ needs.copilot_environments_workflow_setup.outputs.prod_deploy == 'yes' }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/standard-deploy.yml@main
    secrets:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
    with:
      environment: 'uat'
      app_name: 'form-runner'
      version: ${{ github.ref_name == 'main' && 'latest' || needs.tag_version.outputs.version_to_tag }}

  prod_deploy:
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    needs: uat_deploy
    if: ${{ needs.copilot_environments_workflow_setup.outputs.prod_deploy == 'yes' }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/standard-deploy.yml@main
    secrets:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
    with:
      environment: 'prod'
      app_name: 'form-runner'
      version: ${{ github.ref_name == 'main' && 'latest' || needs.tag_version.outputs.version_to_tag }}
